{
	"info": {
		"_postman_id": "9aca16e4-7297-450f-8a2d-a896fbac1ae1",
		"name": "booker-decode-sample-demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16518064"
	},
	"item": [
		{
			"name": "Get Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response body",
							"const responseData = pm.response.json();",
							"",
							"// Get the token from the response",
							"// IMPORTANT: Change 'responseData.data.token' to match your API's JSON structure",
							"const authToken = responseData.token;",
							"",
							"// Check if the token exists and is a string",
							"if (authToken && typeof authToken === 'string') {",
							"  // Set the token as an environment variable",
							"  pm.environment.set(\"accessToken\", authToken);",
							"  console.log(\"Token saved to environment: \" + authToken);",
							"} else {",
							"  console.error(\"Token not found or is not a string.\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\" : \"{{username}}\",\n    \"password\" : \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const jobTitles = [",
							"    \"Software Engineer\",",
							"    \"Data Scientist\",",
							"    \"Product Manager\",",
							"    \"UX/UI Designer\",",
							"    \"DevOps Engineer\",",
							"    \"Project Manager\"",
							"];",
							"",
							"const randomJob = jobTitles[Math.floor(Math.random() * jobTitles.length)];",
							"",
							"// Set the random job title as an environment variable",
							"pm.environment.set(\"randomJobTitle\", randomJob);",
							"",
							"console.log(\"Generated Job Title:\", randomJob);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response body",
							"const responseData = pm.response.json();",
							"const bookingId = responseData.bookingid;",
							"pm.environment.set(\"bookingId\", bookingId);",
							"console.log(\"Token saved to environment: \" + bookingId);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"{{$randomUserName}}\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const jobTitles = [",
							"    \"Software Engineer\",",
							"    \"Data Scientist\",",
							"    \"Product Manager\",",
							"    \"UX/UI Designer\",",
							"    \"DevOps Engineer\",",
							"    \"Project Manager\"",
							"];",
							"",
							"const randomJob = jobTitles[Math.floor(Math.random() * jobTitles.length)];",
							"",
							"// Set the random job title as an environment variable",
							"pm.environment.set(\"randomJobTitle\", randomJob);",
							"",
							"console.log(\"Generated Job Title:\", randomJob);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"{{$randomUserName}}\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingId}}"
						}
					]
				}
			},
			"response": []
		}
	]
}